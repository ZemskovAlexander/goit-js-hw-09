{"mappings":"YAAA,IAAMA,EAAYC,SAASC,cAAc,QAEzCF,EAAUG,iBAAiB,UAAU,SAAAC,GAKnC,OAJAA,EAAIC,iBACa,IAAIC,SAASN,GACrBO,SAAQ,SAACC,EAAOC,G,OAASC,QAAQC,IAAIH,EAAOC,MAE9C,IAAIG,QAAQC,OAChBC,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MACjBP,QAAQC,IAAI,uBAAwCO,OAAfF,EAAS,QAAYE,OAAND,EAAM,UAE3DE,OAAM,SAAAJ,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MAClBP,QAAQC,IAAI,sBAAuCO,OAAfF,EAAS,QAAYE,OAAND,EAAM,c","sources":["src/js/03-promises.js"],"sourcesContent":["const inputData = document.querySelector('form');\n\ninputData.addEventListener('submit', evt => {\n  evt.preventDefault();\n  const formData = new FormData(inputData);\n  formData.forEach((value, name) => console.log(value, name));\n\n  return new Promise((resolve, reject)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    }));\n});\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   } else {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   }\n// }\n\n// const promise = new Promise()\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });"],"names":["$ce04d3a99e08e73b$var$inputData","document","querySelector","addEventListener","evt","preventDefault","FormData","forEach","value","name","console","log","Promise","reject","then","param","position","delay","concat","catch"],"version":3,"file":"03-promises.318845f9.js.map"}